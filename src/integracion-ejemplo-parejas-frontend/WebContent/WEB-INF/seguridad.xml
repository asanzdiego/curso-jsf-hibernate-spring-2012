<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- cadena de filtros de seguridad para cada peticion -->
	<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/**=httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
			</value>
		</property>
	</bean>

	<!-- soporte para guardar en la session la informacion de seguridad-->
	<bean id="httpSessionContextIntegrationFilter"
		class="org.acegisecurity.context.HttpSessionContextIntegrationFilter" />

	<!-- filtro para salir de la session de seguridad-->
	<bean id="logoutFilter"
		class="org.acegisecurity.ui.logout.LogoutFilter">
		<constructor-arg value="/logoutSuccess.jsp" />
		<constructor-arg>
			<list>
				<bean
					class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

	<!-- filtro para authentificar las peticiones de url -->
	<bean id="authenticationProcessingFilter"
		class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="authenticationFailureUrl"
			value="/login.jsp?login_error=1" />
		<property name="defaultTargetUrl" value="/paginas/buscar.jsf" />
		<property name="filterProcessesUrl"
			value="/j_acegi_security_check" />
	</bean>

	<!-- ???? yo lo quitaría -->
	<bean id="securityContextHolderAwareRequestFilter"
		class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter" />

	<!-- rol a darle a los usuarios que no han hecho login -->
	<bean id="anonymousProcessingFilter"
		class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="changeThis" />
		<property name="userAttribute"
			value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

	<!-- redirector de excepciones de seguridad a url -->
	<bean id="exceptionTranslationFilter"
		class="org.acegisecurity.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean
				class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/login.jsp" />
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean
				class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/accessDenied.jsp" />
			</bean>
		</property>
	</bean>

	<!-- filtro que deja entrar según los roles a las distintas url's -->
	<bean id="filterInvocationInterceptor"
		class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT 
				/paginas/**=ROLE_USUARIO
				/**=IS_AUTHENTICATED_ANONYMOUSLY
			</value>
		</property>
	</bean>

	<!-- gestor de autentificacion tiene una lista de autenficadores (realms) -->
	<bean id="authenticationManager"
		class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<!-- como es un dao provider necesitamos leer login,password y rol para el usuario -->
	<bean id="daoAuthenticationProvider"
		class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>

	<!-- los detalles de los usuarios estan en memoria -->
	<bean id="userDetailsService"
		class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
		<property name="userProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="location"
					value="/WEB-INF/users.properties" />
			</bean>
		</property>
	</bean>

	<!-- votanos afirmativo si el usuario al hacer login tiene ese rol o ya esta autentificado -->
	<bean id="accessDecisionManager"
		class="org.acegisecurity.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.acegisecurity.vote.RoleVoter" />
				<bean class="org.acegisecurity.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<!-- mostrar sucesos de seguridad por consola -->
	<bean id="loggerListener"
		class="org.acegisecurity.event.authentication.LoggerListener" />

	<!-- Acegi Method Security -->
	<bean id="servicioParejasSecurityInterceptor"
		class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<property name="objectDefinitionSource">
			<value>
				app.parejas.negocio.ServicioParejas.encontrar*=ROLE_USUARIO
			</value>
		</property>
	</bean>

	<!--	<bean id="autoProxyCreator"-->
	<!--		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
	<!--		<property name="interceptorNames">-->
	<!--			<list>-->
	<!--				<value>servicioParejasSecurityInterceptor</value>-->
	<!--			</list>-->
	<!--		</property>-->
	<!--		<property name="beanNames">-->
	<!--			<list>-->
	<!--				<value>servicioParejas</value>-->
	<!--			</list>-->
	<!--		</property>-->
	<!--	</bean>-->

	<bean id="servicioParejasSeguro"
		class="org.springframework.aop.framework.ProxyFactoryBean">
<!-- con transacciones.old.xml descomentar -->		
<!--		<property name="target" ref="servicioParejasTransaccional" />-->
		<property name="target" ref="servicioParejas" />
		<property name="interceptorNames"
			value="servicioParejasSecurityInterceptor" />
		<property name="proxyInterfaces"
			value="app.parejas.negocio.ServicioParejas" />

	</bean>
</beans>
