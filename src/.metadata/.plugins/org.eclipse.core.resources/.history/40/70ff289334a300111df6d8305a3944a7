package curso.dao.JDBCTemplate;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowCallbackHandler;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;

import curso.dao.UsuarioDao;
import curso.modelo.Usuario;

//public class UsuarioDaoJdbcTemplateCursoImpl extends AbstractJdbcDaoTemplate implements UsuarioDao {
public class UsuarioDaoJdbcTemplateCursoImpl extends JdbcDaoSupport implements UsuarioDao {
	public void deleteUsuario(Integer id) {
		getJdbcTemplate().update("delete from usuarios where id=?",new Object[]{id});
	} 

	public Usuario findUsuario(Integer id) {
		try {
			return (Usuario) getJdbcTemplate().queryForObject("select * from usuarios where id=?",
					new Object[]{id},new RowMapper(){
						public Object mapRow(ResultSet rs, int rowNum)
								throws SQLException {
							return new Usuario(rs.getInt("id"),rs.getString("nombre"));
						}
			});
		} catch (DataAccessException e) {
			return null;
		}
	}

	public List listAll() {
		final List<Usuario> lista=
				new ArrayList<Usuario>(
						getJdbcTemplate().queryForInt("select count(*) from usuarios"));
		
		getJdbcTemplate().query("select * from usuarios",
				new RowCallbackHandler(){
					public void processRow(ResultSet rs) throws SQLException {
						lista.add(new Usuario(rs.getInt("id"),rs.getString("nombre")));
					}
		 		});
		
		return lista;
	}

	public void saveListaUsuarios(Usuario[] usuarios) {
		for (Usuario usuario : usuarios) {
			saveUsuario(usuario);
		}

	}

	public void saveUsuario(Usuario u) {
		getJdbcTemplate().update("insert into usuarios values(?,?)",
				new Object[]{u.getId(),u.getNombre()},
				new int[] {java.sql.Types.INTEGER,java.sql.Types.VARCHAR});
	}
}
